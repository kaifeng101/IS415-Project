{
  "hash": "a9672943d22a26e3f24a95461bf05985",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2: Application of Geospatial Analysis Methods to Discover Thailand Drug Abuse at the Province Level\"\nauthor: \"kai feng\"\ndate: \"Sep 23, 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# **Introduction**\n\n### Drug Abuse Overview\n\n-   **Global Impact**: Drug abuse has severe health, financial, and social consequences.\n\n-   **Prevalence**: In 2021, 1 in 17 people aged 15–64 worldwide used a drug in the past year.\n\n-   **Growth Trend**: Drug users increased from 240 million in 2011 to 296 million in 2021.\n\n### Drug Situation in Thailand\n\n-   **Geopolitical Context**: Proximity to the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)), a major drug production area, makes Thailand a key market and transit route for drug trafficking.\n\n-   **Youth Drug Abuse**:\n\n    -   Approximately 2.7 million young people in Thailand use drugs.\n\n    -   Around 300,000 youth aged 15-19 need drug treatment.\n\n    -   Vocational students are nearly twice as involved with drugs compared to secondary-school students.![](https://is415-ay2024-25t1.netlify.app/img/th_ex2_img1.png)\n\n**This Geospatial Analytics will Focus on:**\n\n-   **Objective:** Determine if drug abuse indicators in Thailand show spatial dependence.\n-   **Analysis Goals**:\n    -   Identify clusters, outliers, and hotspots of drug abuse.\n\n    -   Examine how these patterns change over time.\n\n<br/><br/>\n\n# **1.0 Setup**\n\n## 1.1 Installing R-Packages\n\n::: panel-tabset\n## *Importing and Transforming Data*\n\n-   `sf`:\n\n    -   For handling spatial vector data and transforming it into simple features (`sf`) objects.\n\n    -   Functions like `st_read()` for importing spatial data and `st_transform()` for coordinate reference system transformations.\n\n-   `tidyverse`: For data manipulation and transformation, including functions for working with `tibble` data frames.\n\n-   `readr`: For reading in CSV or other text-based data files if needed.\n\n-   `dplyr`: provide data manipulation capabilities (eg. to group and summarize the relationships between these columns)\n\n-   `arrow`: To read parquet files\n\n## *Displaying Maps*\n\n-   `tmap`: For creating thematic maps and displaying KDE layers.\n\n-   `ggplot2`: For additional custom visualizations if needed.\n\n-   *`scales`*: Transform the unit of measurement for coordinate\n\n-   `animation, png, magick`: For animation work\n\n## *Spatial Autocorrelation*\n\n-   `sfdep`: For performing both local and global spatial autocorrelation analysis\n\n## *Prediction*\n\n-   `forecast`: For trend prediction\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, readr, ggplot2, tmap, dplyr, arrow, sfdep, scales, animation, png, magick, patchwork, Kendall, zoo, forecast)\n```\n:::\n\n\n<br/>\n\n## 1.2 Data Acquisition\n\nWe will be using 2 sets of data:\n\n::: panel-tabset\n## Drug offenses Data\n\n-   **Source:** [[Thailand Drug Offenses \\[2017-2022\\]]{.underline}](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022)\n\n-   **Study Period:** 2017-2022\n\n## Administrative Boundaries\n\n-   **Source:** [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX.\n-   **Province Boundaries**: For understanding conflict distribution across larger administrative divisions.\n:::\n\n<br/>\n\n## 1.3 Importing Geospatial Data into R\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- read_parquet(\"data/drug_offense/thai_drug_offenses_2017_2022.parquet\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_offenses <- read_csv(\"data/drug_offense/thai_drug_offenses_2017_2022.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7392 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): types_of_drug_offenses, province_th, province_en\ndbl (2): fiscal_year, no_cases\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince the data in CSV and Parquet formats are identical, we only need to import one of these file types.\n:::\n\n## Administrative Boundaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_boundaries <- st_read(dsn = \"data/subnational_administrative_boundary\", layer=\"tha_admbnda_adm1_rtsd_20220121\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\Users\\ngkng\\Desktop\\School\\Geo -Local\\Take-home_Ex\\Take-home_Ex02\\data\\subnational_administrative_boundary' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n:::\n\n<br/>\n\n## 1.4 Checking Geospatial Data\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(drug_offenses)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince\n\n-   Since the class of **drug_offenses** != sf object\n\nwe have to transform it.\n:::\n\n## Administrative Boundaries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(province_boundaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(province_boundaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n::: callout-note\nSince Coordinate Reference System of **province_boundaries**\n\nis in 4326 (unit of measurement = degree), we have to transform it\n:::\n:::\n\n<br/>\n\n## 1.6 Data Preparation and Wrangling\n\n::: panel-tabset\n## Drug Offenses Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop & Rename column\ndrug_offenses <- drug_offenses %>% \n  select(fiscal_year, types_of_drug_offenses, no_cases, province_en) %>% \n  rename(\n    year = fiscal_year,\n    offense_type = types_of_drug_offenses,\n    case_count = no_cases,\n    province_name = province_en\n  )\n```\n:::\n\n\n## Administrative Boundaries\n\n##### Transform the Coordinate Reference System of these:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprovince_boundaries <- province_boundaries %>%\n  st_transform(crs = 4240)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Drop & Rename column\nprovince_boundaries <- province_boundaries %>% \n  select(Shape_Leng, Shape_Area, ADM1_EN, ADM1_PCODE, geometry) %>% \n  rename(\n    province_name = ADM1_EN,\n    province_code = ADM1_PCODE\n  )\n```\n:::\n\n\n##### Sample plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = province_boundaries) +\n  geom_sf() +\n  theme_minimal() +\n  labs(title = \"Map of Geometries\",\n       subtitle = \"Displaying multipolygon geometries\",\n       caption = \"Source: Example Data\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Understanding the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for unmatched province_names between Drug Offenses & Province Boundaries data set\nunmatched_provinces <- drug_offenses %>%\n  left_join(province_boundaries, by = \"province_name\") %>%\n  filter(is.na(Shape_Leng)) %>%\n  select(province_name)\n\nunmatched_provinces <- unique(unmatched_provinces) #Loburi, buogkan\n\n\n\n# Transform the province_name in the Drug Offenses dataset\ndrug_offenses <- drug_offenses %>%\n  mutate(province_name = case_when(\n    province_name == \"Loburi\" ~ \"Lop Buri\",\n    province_name == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_name  # Keep the original name if no match\n  ))\n\n\n# Assign each drug offense to a province\ndrug_offenses_by_province <- drug_offenses %>%\n  left_join(province_boundaries, by = \"province_name\")\n\n# Check for any empty attributes in the test dataset\nempty_attributes <- sapply(drug_offenses_by_province, function(column) any(is.na(column)))\n\n# Identify columns with missing values\nmissing_columns <- names(empty_attributes[empty_attributes]) # character(0) = No missing Column\n```\n:::\n\n\n::: callout-warning\nThe **Drug Offenses** dataset has some naming issues with `province_name`.\n\nWe found two discrepancies: **Loburi** should be changed to **Lop Buri**, and **buogkan** should be updated to **Bueng Kan** to match the **Province Boundaries** dataset.\n\nWe will update the `province_name` entries in the **Drug Offenses** dataset accordingly.\n:::\n:::\n\n<br/><br/>\n\n# **2.0 Understanding the Data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\noffense_type <- unique(drug_offenses_by_province$offense_type) \nprint(offense_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\n::: callout-note\nThese varying degrees of offense types may reveal patterns and trends in drug-related activities, providing a comprehensive understanding of the issue at hand.\n:::\n\n<br/><br/>\n\n# **3.0 Exploratory Data Analysis**\n\n## Summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- drug_offenses_by_province %>%\n  group_by(province_name, year) %>%\n  summarise(\n    total_cases = sum(case_count, na.rm = TRUE),\n    geometry = first(geometry)\n    )\n\nwrite_rds(summary_stats, \"data/rds/summary_stats.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- read_rds(\"data/rds/summary_stats.rds\")\nsummary_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 462 × 4\n# Groups:   province_name [77]\n   province_name  year total_cases                                      geometry\n   <chr>         <dbl>       <dbl>                            <MULTIPOLYGON [°]>\n 1 Amnat Charoen  2017        5076 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 2 Amnat Charoen  2018        5651 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 3 Amnat Charoen  2019        7339 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 4 Amnat Charoen  2020        3949 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 5 Amnat Charoen  2021        8961 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 6 Amnat Charoen  2022        4459 (((104.9654 16.28154, 104.9654 16.28148, 104…\n 7 Ang Thong      2017        1614 (((100.3381 14.79649, 100.3384 14.79607, 100…\n 8 Ang Thong      2018        2717 (((100.3381 14.79649, 100.3384 14.79607, 100…\n 9 Ang Thong      2019        2781 (((100.3381 14.79649, 100.3384 14.79607, 100…\n10 Ang Thong      2020        2636 (((100.3381 14.79649, 100.3384 14.79607, 100…\n# ℹ 452 more rows\n```\n\n\n:::\n:::\n\n\n## Top /Bottom 10 Related-Drug Incidents Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Loop through each year and plot top 10 provinces\nyears_to_plot <- unique(summary_stats$year)\n```\n:::\n\n\n::: panel-tabset\n## Top 10 Drug Abuse Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10_plot_list <- list()\n\n# Loop through each year and create the plots for top 10\nfor (current_year in years_to_plot) {\n  # Filter and sort the data for the specific year\n  top_10_year_data <- summary_stats %>%\n    filter(year == current_year) %>%\n    arrange(desc(total_cases)) %>%\n    head(10)\n  \n  # Create the plot for the current year\n  top_10_plot <- ggplot(top_10_year_data, aes(x = reorder(province_name, total_cases), y = total_cases)) +\n    geom_bar(stat = \"identity\", fill = \"pink\", width = 0.8) +\n    coord_flip() +\n    labs(x = NULL, y = NULL, subtitle = paste(\"Year:\", current_year)) +\n    scale_y_continuous(labels = scales::comma_format(accuracy = 1)) +\n    theme_minimal(base_size = 10) +\n    geom_text(aes(label = total_cases),\n              position = position_stack(vjust = 0.5),   \n              color = \"black\", \n              size = 3) +\n    theme(axis.text.x = element_blank(),   # Hide the y-axis text\n          axis.ticks.x = element_blank())  # Hide the y-axis ticks\n  \n  # Add the plot to the list\n  top_10_plot_list[[as.character(current_year)]] <- top_10_plot\n}\n\n# Combine the top 10 plots into a grid\ntop_10_plot_list <- wrap_plots(top_10_plot_list)\n\n# Add a single title to the combined plot\ntop_10_plot_list <- top_10_plot_list +\n  plot_annotation(title = \"Top 10 Provinces by Total Drug Abuse Cases Over the Years\")\n\nwrite_rds(top_10_plot_list, \"data/rds/top_10_plot_list.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(read_rds(\"data/rds/top_10_plot_list.rds\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Bottom 10 Drug Abuse Provinces\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a list to store the bottom 10 plots\nbottom_10_plot_list <- list()\n\n# Loop through each year and create the plots for bottom 10\nfor (current_year in years_to_plot) {\n  # Filter and sort the data for the specific year to get the bottom 10\n  bottom_10_year_data <- summary_stats %>%\n    filter(year == current_year) %>%\n    arrange(total_cases) %>%   # Ascending order to get bottom cases\n    head(10)\n  \n  # Create the plot for the current year\n  bottom_10_plot <- ggplot(bottom_10_year_data, aes(x = reorder(province_name, -total_cases), y = total_cases)) +\n    geom_bar(stat = \"identity\", fill = \"steelblue\", width = 0.8) +\n    coord_flip() +\n    labs(x = NULL, y = NULL, subtitle = paste(\"Year:\", current_year)) +  # Subtitle to display year\n    scale_y_continuous(labels = scales::comma_format(accuracy = 1)) +\n    theme_minimal(base_size = 10) +\n    geom_text(aes(label = total_cases),\n              position = position_stack(vjust = 0.5),   \n              color = \"black\", \n              size = 3) +\n    theme(axis.text.x = element_blank(),   # Hide the y-axis text\n          axis.ticks.x = element_blank())  # Hide the y-axis ticks\n  \n  # Add the plot to the list\n  bottom_10_plot_list[[as.character(current_year)]] <- bottom_10_plot\n}\n\n# Combine the bottom 10 plots into a grid\nbottom_10_plot_list <- wrap_plots(bottom_10_plot_list)\n\n# Add a single title to the combined plot\nbottom_10_plot_list <- bottom_10_plot_list +\n  plot_annotation(title = \"Bottom 10 Provinces by Total Drug Abuse Cases Over the Years\")\n\nwrite_rds(bottom_10_plot_list, \"data/rds/bottom_10_plot_list.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(read_rds(\"data/rds/bottom_10_plot_list.rds\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n:::\n\n## Trends over time for the entire country\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_trends <- drug_offenses_by_province %>%\n  group_by(year) %>%\n  summarise(total_cases = sum(case_count))\n\n# Plot trend over time with formatted y-axis labels\nggplot(drug_trends, aes(x = year, y = total_cases)) +\n  geom_line(color = \"blue\") +\n  geom_point(size = 3, color = \"red\") +  \n  labs(title = \"Drug Abuse Cases Over Time\",\n       x = \"Year\", y = \"Total Cases\") +\n  scale_y_continuous(labels = comma)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n<br/><br/>\n\n# **4.0 Global Spatial Autocorrelation Analysis**\n\nOrganize into years for more detailed analysis:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_stats <- st_as_sf(summary_stats)\n\nsummary_stats_2017 <- summary_stats %>%\n  filter(year == 2017) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2018 <- summary_stats %>%\n  filter(year == 2018) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2019 <- summary_stats %>%\n  filter(year == 2019) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2020 <- summary_stats %>%\n  filter(year == 2020) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2021 <- summary_stats %>%\n  filter(year == 2021) %>%\n  ungroup()  # Remove any grouping\n\nsummary_stats_2022 <- summary_stats %>%\n  filter(year == 2022) %>%\n  ungroup()  # Remove any grouping\n```\n:::\n\n\n### Deriving Queen’s Contiguity weights: sfdep methods\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb <- st_contiguity(summary_stats_2017$geometry)\nwt <- st_weights(nb, style = \"W\", allow_zero = TRUE)\n\n\nwm_q_2017 <- summary_stats_2017 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2018 <- summary_stats_2018 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2019 <- summary_stats_2019 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2020 <- summary_stats_2020 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2021 <- summary_stats_2021 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwm_q_2022 <- summary_stats_2022 %>% \n  mutate(\n    nb = nb,\n    wt = wt,\n    .before = 1\n  )\n\nwrite_rds(wm_q_2017, \"data/rds/wm_q_2017.rds\")\nwrite_rds(wm_q_2018, \"data/rds/wm_q_2018.rds\")\nwrite_rds(wm_q_2019, \"data/rds/wm_q_2019.rds\")\nwrite_rds(wm_q_2020, \"data/rds/wm_q_2020.rds\")\nwrite_rds(wm_q_2021, \"data/rds/wm_q_2021.rds\")\nwrite_rds(wm_q_2022, \"data/rds/wm_q_2022.rds\")\n```\n:::\n\n\nInitialize for use later:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q_2017 <- read_rds(\"data/rds/wm_q_2017.rds\")\nwm_q_2018 <- read_rds(\"data/rds/wm_q_2018.rds\")\nwm_q_2019 <- read_rds(\"data/rds/wm_q_2019.rds\")\nwm_q_2020 <- read_rds(\"data/rds/wm_q_2020.rds\")\nwm_q_2021 <- read_rds(\"data/rds/wm_q_2021.rds\")\nwm_q_2022 <- read_rds(\"data/rds/wm_q_2022.rds\")\n```\n:::\n\n\n::: callout-note\nTo derive spatial autocorrelation, we first gather the relevant geographic points for our study area:\n\n1.  **Filtering for Unique Geographic Points**: The `summary_stats` dataset contains multiple entries for each geographic point across different years. We filter it to retain data for a single year (e.g., 2017) to work with a unique set of locations.\n\n2.  **Identifying Neighbors**: To assess the spatial relationships between areas, we identify neighboring regions. We use Queen's contiguity weights, which include all neighbors that touch at edges or corners, capturing comprehensive spatial interactions.\n\n3.  **Calculating Weights**: After identifying neighbors, we calculate spatial weights that quantify the influence neighboring areas have on one another. These weights are crucial for measuring spatial autocorrelation, as they inform how a variable in one area relates to values in its neighbors.\n:::\n\n## 2017: An Initial Overview\n\n### Global Moran' I\n\n::: panel-tabset\n## Computing Global Moran’ I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI_2017 <- global_moran(wm_q_2017$total_cases,\n                       wm_q_2017$nb,\n                       wm_q_2017$wt)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in lag.listw(listw, z, zero.policy = zero.policy, NAOK = NAOK): NAs in\nlagged values\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(moranI_2017)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 2\n $ I: num NA\n $ K: num 31.4\n```\n\n\n:::\n:::\n\n\n## Performing Global Moran’s I test\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q_2017$total_cases,\n                  wm_q_2017$nb,\n                  wm_q_2017$wt,\n                  zero.policy = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.4598, p-value = 0.006951\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.133140650      -0.013333333       0.003545946 \n```\n\n\n:::\n:::\n\n\n::: callout-note\nMoran I statistic (0.133140650) -\\> indicates a positive correlation in the variable of interest (e.g., total cases).\n\nSD of 2.4598 -\\> suggests that Moran’s I is greater than the expected value under the null hypothesis.\n\nP-value of 0.006951 -\\> is \\< 0.05, indicating strong statistical significance.\n\nExpectation of -0.013333333 -\\> suggests we would expect slight negative autocorrelation if there were no spatial structure.\n\nSince the p-value \\< 0.05, we reject the null hypothesis of no spatial autocorrelation. This strongly suggests there is significant positive spatial clustering of the variable in the study area (regions with high values are near areas with high values).\n:::\n\n## Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2017 <- global_moran_perm(wm_q_2017$total_cases,\n                                              wm_q_2017$nb,\n                                              wm_q_2017$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2017\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.13314, observed rank = 98, p-value = 0.04\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2017$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.151935 -0.056539 -0.030537 -0.018749  0.008258  0.162326 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2017.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2017$res\n\nglobal_moran_perm_hist_2017 <- hist(simulated_values, \n                                    freq=TRUE, \n                                    breaks=20, \n                                    xlab=\"Simulated Moran's I in 2017\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2017.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=800}\n:::\n:::\n\n\n::: callout-note\nTo ensure our results are accurate, we'll perform a Monte Carlo (permutation) test on Moran’s I statistic. This method helps us understand if the observed clustering of values is statistically significant.\n\nFirst, we set the seed using `set.seed(1234)`. This step is crucial because it guarantees that our simulation results will be reproducible. Every time we run the simulation, we should get the same outcomes, which is important for consistency in our analysis.\n\nNow, looking at the results from our permutation test:\n\n-   **Moran’s I statistic**: 0.13314\n\n-   **Observed rank**: 98\n\n-   **P-value**: 0.04\n\nThe p-value being less than 0.05 tells us that there's strong statistical evidence against the null hypothesis of no spatial autocorrelation. This means we can conclude there’s significant positive spatial clustering in our data—areas with high values are near other areas with high values.\n\nLooking at the summary of the simulated statistics, with the maximum being 0.162326 and the minimum at -0.151935. The distribution of these values helps us understand the expected behavior of our statistic under the null hypothesis.\n:::\n:::\n\n::: callout-note\nIt's important to note that some areas may have no neighboring regions, which results in null weights. To address this, we use `zero.policy = TRUE` in our analysis, allowing regions with no neighbors to be included without causing errors in calculations.\n\nHowever, it's essential to understand that Global Moran's I does not accommodate regions without neighbors in its calculations, meaning that these regions, even when included, will not contribute to the overall assessment of spatial autocorrelation.\n\nConsequently, regions with null weights may still affect the results, leading to potential skewing of the analysis and limiting its interpretability. Therefore, careful consideration of how to handle such regions is crucial for ensuring accurate spatial analysis.\n:::\n\n## Visualising across time span (2017-2022)\n\n::: panel-tabset\n## 2018 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2018 <- global_moran_perm(wm_q_2018$total_cases,\n                                              wm_q_2018$nb,\n                                              wm_q_2018$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2018\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.11637, observed rank = 96, p-value = 0.08\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2018$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.13864 -0.06366 -0.02856 -0.01870  0.02001  0.17737 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2018.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2018$res\n\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2018\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2018.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-33-1.png){width=800}\n:::\n:::\n\n\n## 2019 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2019 <- global_moran_perm(wm_q_2019$total_cases,\n                                              wm_q_2019$nb,\n                                              wm_q_2019$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2019\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.15541, observed rank = 98, p-value = 0.04\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2019$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.14482 -0.06808 -0.02675 -0.01963  0.01235  0.19844 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2019.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2019$res\n\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2019\")\nabline(v=0, \n       col=\"red\") \n\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2019.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-37-1.png){width=800}\n:::\n:::\n\n\n## 2020 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2020 <- global_moran_perm(wm_q_2020$total_cases,\n                                              wm_q_2020$nb,\n                                              wm_q_2020$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2020\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.1296, observed rank = 97, p-value = 0.06\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2020$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.152560 -0.076142 -0.031856 -0.026822  0.006521  0.194366 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2020.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2020$res\n\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2020\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2020.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-41-1.png){width=800}\n:::\n:::\n\n\n## 2021 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2021 <- global_moran_perm(wm_q_2021$total_cases,\n                                              wm_q_2021$nb,\n                                              wm_q_2021$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2021\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.19889, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2021$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17499 -0.08997 -0.02457 -0.02653  0.02894  0.19889 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2021.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2021$res\n\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2021\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2021.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-45-1.png){width=800}\n:::\n:::\n\n\n## 2022 Global Moran' I\n\n### Performing Global Moran’s I permutation test (Monte Carlo)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm_result_2022 <- global_moran_perm(wm_q_2022$total_cases,\n                                              wm_q_2022$nb,\n                                              wm_q_2022$wt,\n                                              zero.policy = TRUE,\n                                              nsim = 99)\nglobal_moran_perm_result_2022\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.20113, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(global_moran_perm_result_2022$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.17928 -0.09257 -0.03519 -0.02521  0.03933  0.20113 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/global_moran_perm_result_2022.png\", width = 1600, height = 1000)\n\n# Adjust font size and scaling using par()\npar(cex = 2,       # Overall scaling for text and symbols\n    cex.axis = 1.5, # Axis text size\n    cex.lab = 2,    # Axis label size\n    cex.main = 2.5, # Main title size\n    mar = c(5, 5, 4, 2) + 0.1) # Adjust margins for more space around the plot\n\n# Extract the simulated statistics and observed statistic\nsimulated_values <- global_moran_perm_result_2022$res\n\nhist(simulated_values, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I in 2022\")\nabline(v=0, \n       col=\"red\") \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_perm_result_2022.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-49-1.png){width=800}\n:::\n:::\n\n:::\n\n::: callout-note\n-   The results indicate a general trend of positive spatial autocorrelation from 2017 to 2022, with significant clustering observed in 2021 and 2022.\n\n-   The years 2017, 2019, 2021, and 2022 show statistically significant evidence of clustering, while 2018 and 2020 have lower evidence of spatial correlation.\n\n-   This trend suggests that the variable of interest tends to cluster in certain areas, particularly from 2021 onwards, which may warrant further investigation into the factors driving this clustering.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a list of image files in the specified directory\nglobal_moran_perm_result_files <- list.files(\"data/rds/\", pattern = \"\\\\.png$\", full.names = TRUE)\n\n# Load saved images and combine them into an animated GIF\nglobal_moran_images <- lapply(global_moran_perm_result_files, image_read)\n\n# Create an animation from the Global Moran's images\nglobal_moran_animation <- image_animate(image_join(global_moran_images), fps = 1)\n\n# Save the animation as a GIF file\nimage_write(global_moran_animation, path = \"data/rds/global_moran_animation.gif\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/global_moran_animation.gif\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-51-1.gif)\n:::\n:::\n\n\n<br/><br/>\n\n# **5.0 Local Spatial Autocorrelation Analysis**\n\n## Visualising LISA Map\n\n::: panel-tabset\n## 2017\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2017 <- wm_q_2017 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2017.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2017 <- tm_shape(lisa_2017) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2017\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2017 <- tm_shape(lisa_2017) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2017\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2017, local_moran_pvalue_map_2017, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2017.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-54-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2017.png\", width = 1600, height = 1200)\n\nlisa_sig_2017 <- lisa_2017  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2017) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2017) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2017\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2017.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-56-1.png){width=800}\n:::\n:::\n\n\n## 2018\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2018 <- wm_q_2018 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2018.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2018 <- tm_shape(lisa_2018) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2018\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2018 <- tm_shape(lisa_2018) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2018\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2018, local_moran_pvalue_map_2018, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2018.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-59-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2018.png\", width = 1600, height = 1200)\n\nlisa_sig_2018 <- lisa_2018  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2018) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2018) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2018\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2018.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-61-1.png){width=800}\n:::\n:::\n\n\n## 2019\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2019 <- wm_q_2019 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2019.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2019 <- tm_shape(lisa_2019) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2019\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2019 <- tm_shape(lisa_2019) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2019\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2019, local_moran_pvalue_map_2019, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2019.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-64-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2019.png\", width = 1600, height = 1200)\n\nlisa_sig_2019 <- lisa_2019  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2019) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2019) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2019\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2019.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-66-1.png){width=800}\n:::\n:::\n\n\n## 2020\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2020 <- wm_q_2020 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2020.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2020 <- tm_shape(lisa_2020) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2020\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2020 <- tm_shape(lisa_2020) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2020\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2020, local_moran_pvalue_map_2020, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2020.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-69-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2020.png\", width = 1600, height = 1200)\n\nlisa_sig_2020 <- lisa_2020  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2020) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2020) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2020\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2020.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-71-1.png){width=800}\n:::\n:::\n\n\n## 2021\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2021 <- wm_q_2021 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2021.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2021 <- tm_shape(lisa_2021) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2021\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2021 <- tm_shape(lisa_2021) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2021\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2021, local_moran_pvalue_map_2021, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2021.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-74-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2021.png\", width = 1600, height = 1200)\n\nlisa_sig_2021 <- lisa_2021  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2021) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2021) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2021\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2021.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-76-1.png){width=800}\n:::\n:::\n\n\n## 2022\n\n### Computing Local Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_2022 <- wm_q_2022 %>% \n  mutate(local_moran = local_moran(\n    total_cases, nb, wt, nsim = 99, zero.policy = TRUE),\n    .before = 1) %>% \n  unnest(local_moran)\n```\n:::\n\n\n### Local Moran's I VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/local_moran_vs_pvalue_map_2022.png\", width = 1600, height = 1000)\n\ntmap_mode(\"plot\")\nlocal_moran_map_2022 <- tm_shape(lisa_2022) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Total Cases in 2022\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\nlocal_moran_pvalue_map_2022 <- tm_shape(lisa_2022) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\n                \"Highly significant (< 0.001)\", \n                \"Significant (0.001 - 0.01)\",\n                \"Moderately significant (0.01 - 0.05)\", \n                \"Not significant (> 0.05)\"\n              )) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I of Total Cases in 2022\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(local_moran_map_2022, local_moran_pvalue_map_2022, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/local_moran_vs_pvalue_map_2022.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-79-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/lisa_map_2022.png\", width = 1600, height = 1200)\n\nlisa_sig_2022 <- lisa_2022  %>%\n  filter(p_ii_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(lisa_2022) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2022) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"LISA Map 2022\",   \n            main.title.size = 2.5,              \n            legend.text.size = 2.0,           \n            legend.title.size = 2.7,         \n            legend.position = c(\"right\", \"bottom\"), \n            frame = TRUE)  # Add a frame around the map\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_map_2022.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-81-1.png){width=800}\n:::\n:::\n\n:::\n\n::: callout-note\n**Computing Local Moran’s I**\n\nadd new column \\[local_moran\\] -\\> stores the calculated Local Moran's I values\n\n`zero.policy = TRUE` option allows the method to handle regions without neighbors appropriately.\n\nunnest(local_moran) -\\> flatten the results, simplifying further analysis of the output.\n\n**Local Moran’s I VS P-Value Visualization**\n\nThis segment creates visualizations for the Local Moran's I statistic and its associated p-values for the year 2017\n\nLocal Moran's I values (color-coded) indicating spatial clustering: Ranges from -1.0 (cold spots) to 3.0 (strong hot spots). Provides insights into areas of similar or dissimilar values in case distribution.\n\nP-Value Map:\n\nIllustrates the statistical significance of Local Moran's I: Breaks defined for p-values (\\< 0.001, 0.001-0.01, 0.01-0.05, \\> 0.05).\n\n**Putting Together Significant LISA Results**\n\nThis segment visualizes the significant clusters identified by the Local Moran's I analysis.\n\nThe visualization includes both all regions and the significant clusters, with the latter highlighted based on their mean Local Moran's I values.\n\n1.  **Low-Low (LL)**\n\n-   **Definition**: Areas with low values surrounded by other low-value areas.\n\n-   **Interpretation**: Indicates regions that are underperforming or stable and may not need immediate intervention.\n\n2.  **High-Low (HL)**\n\n-   **Definition**: Areas with high values surrounded by low-value areas.\n\n-   **Interpretation**: Highlights potential hotspots that require further investigation or targeted intervention.\n\n3.  **Low-High (LH)**\n\n-   **Definition**: Areas with low values surrounded by high-value areas.\n\n-   **Interpretation**: Suggests vulnerability to spillover effects from neighboring high-value regions, requiring monitoring.\n\n4.  **High-High (HH)**\n\n-   **Definition**: Areas with high values surrounded by other high-value areas.\n\n-   **Interpretation**: Identifies significant hotspots that may need immediate attention and indicate systemic issues.\n:::\n\n## Visualising LISA map across time span (2017-2022)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a list of image files in the specified directory for LISA maps\nlisa_map_files <- list.files(\"data/rds/\", pattern = \"lisa_map_\\\\d{4}\\\\.png$\", full.names = TRUE)\n\n# Load saved images and combine them into an animated GIF\nlisa_images <- lapply(lisa_map_files, image_read)\n\n# Create an animation from the LISA map images\nlisa_animation <- image_animate(image_join(lisa_images), fps = 1)\n\n# Save the animation as a GIF file\nimage_write(lisa_animation, path = \"data/rds/lisa_animation.gif\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/lisa_animation.gif\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-83-1.gif)\n:::\n:::\n\n\n## Summarize Local Moran's I values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummarize_local_moran <- function(data) {\n  data %>%\n    summarise(\n      mean_local_moran = mean(ii, na.rm = TRUE),\n      min_local_moran = min(ii, na.rm = TRUE),\n      max_local_moran = max(ii, na.rm = TRUE),\n      sd_local_moran = sd(ii, na.rm = TRUE),\n      mean_p_value = mean(p_ii_sim, na.rm = TRUE),\n      min_p_value = min(p_ii_sim, na.rm = TRUE),\n      max_p_value = max(p_ii_sim, na.rm = TRUE),\n      count_high_high = sum(ii > 0 & p_ii_sim < 0.05),\n      count_low_low = sum(ii < 0 & p_ii_sim < 0.05),\n      count_high_low = sum(ii > 0 & p_ii_sim >= 0.05),\n      count_low_high = sum(ii < 0 & p_ii_sim >= 0.05)\n    )\n}\n\n# Apply the function to each year's dataset\nlocal_moran_summary_2017 <- summarize_local_moran(lisa_2017)\nlocal_moran_summary_2018 <- summarize_local_moran(lisa_2018)\nlocal_moran_summary_2019 <- summarize_local_moran(lisa_2019)\nlocal_moran_summary_2020 <- summarize_local_moran(lisa_2020)\nlocal_moran_summary_2021 <- summarize_local_moran(lisa_2021)\nlocal_moran_summary_2022 <- summarize_local_moran(lisa_2022)\n\n# Combine summaries into a single data frame\nlocal_moran_summary_all_years <- bind_rows(\n  mutate(local_moran_summary_2017, year = 2017),\n  mutate(local_moran_summary_2018, year = 2018),\n  mutate(local_moran_summary_2019, year = 2019),\n  mutate(local_moran_summary_2020, year = 2020),\n  mutate(local_moran_summary_2021, year = 2021),\n  mutate(local_moran_summary_2022, year = 2022)\n)\n\nwrite_rds(local_moran_summary_all_years, \"data/rds/local_moran_summary_all_years.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlocal_moran_summary_all_years <- read_rds(\"data/rds/local_moran_summary_all_years.rds\")\n\n# Show all rows and columns\nprint(local_moran_summary_all_years, n = Inf, width = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34804 ymin: 5.610305 xmax: 105.6426 ymax: 20.46352\nGeodetic CRS:  Indian 1975\n# A tibble: 6 × 13\n  mean_local_moran min_local_moran max_local_moran sd_local_moran mean_p_value\n*            <dbl>           <dbl>           <dbl>          <dbl>        <dbl>\n1            0.133          -0.706            2.56          0.384        0.425\n2            0.116          -0.854            3.40          0.447        0.442\n3            0.155          -0.845            4.73          0.608        0.428\n4            0.130          -0.768            2.48          0.493        0.455\n5            0.199          -0.943            2.62          0.505        0.412\n6            0.201          -1.37             2.14          0.540        0.454\n  min_p_value max_p_value count_high_high count_low_low count_high_low\n*       <dbl>       <dbl>           <int>         <int>          <int>\n1        0.02        1                  7             1             50\n2        0.02        1                  4             2             42\n3        0.02        1                  2             1             45\n4        0.02        0.94               4             0             44\n5        0.02        1                  8             1             43\n6        0.02        1                  6             3             46\n  count_low_high\n*          <int>\n1             18\n2             28\n3             28\n4             28\n5             24\n6             21\n                                                                        geometry\n*                                                             <MULTIPOLYGON [°]>\n1 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n2 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n3 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n4 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n5 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n6 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n   year\n* <dbl>\n1  2017\n2  2018\n3  2019\n4  2020\n5  2021\n6  2022\n```\n\n\n:::\n:::\n\n\n::: callout-note\n### Summary of Findings:\n\n1.  **Mean Local Moran's I Values**:\n\n    -   Ranged from **0.116 to 0.201**, indicating increasing clustering of values over time.\n\n2.  **Min/Max Local Moran's I**:\n\n    -   Minimum values: **-1.37 to -0.943** (low-value clusters).\n\n    -   Maximum values: **2.14 to 4.73** (significant high-value clusters).\n\n3.  **Standard Deviation**:\n\n    -   Varied from **0.384 to 0.608**, indicating differences in clustering variability across years.\n\n4.  **P-Values**:\n\n    -   Mean p-values consistent at **0.412 to 0.455**, with a minimum p-value of **0.02**, suggesting significant clustering.\n\n5.  **Cluster Counts**:\n\n    -   High-high clusters decreased from **7** in 2017 to **2** in 2019 but increased in later years.\n\n    -   Low-low clusters remained relatively low, peaking at **3** in 2022.\n\n6.  **Yearly Trends**:\n\n    -   2022 exhibited the highest mean Local Moran's I value (**0.201**), indicating stronger clustering effects.\n:::\n\n## Hot Spot & Cold Spot Area Analysis (HCSA)\n\n::: panel-tabset\n## 2017\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2017 <- wm_q_2017 %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wts, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n### Gi\\* VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2017.png\", width = 1600, height = 1200)\n\ngi_star_2017 <- tm_shape(HCSA_2017) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2017\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ngi_star_pvalue_2017 <- tm_shape(HCSA_2017) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2017\", \n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(gi_star_2017, gi_star_pvalue_2017, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2017.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-88-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2017.png\", width = 1600, height = 1200)\n\nHCSA_sig_2017 <- HCSA_2017  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2017) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2017) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2017\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2017.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-90-1.png){width=800}\n:::\n:::\n\n\n## 2018\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2018 <- wm_q_2018 %>%    \n  mutate(local_Gi = local_gstar_perm(     \n    total_cases, nb, wts, nsim = 99),          \n    .before = 1) %>%   \n  unnest(local_Gi)\n```\n:::\n\n\n### Visualising Hot Spot & Cold Spot (HCSA)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2018.png\", width = 1600, height = 1200)\n\ngi_star_2018 <- tm_shape(HCSA_2018) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2018\",\n            main.title.size = 0.8)\n\ngi_star_pvalue_2018 <- tm_shape(HCSA_2018) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2018\",\n            main.title.size = 0.8)\n\ntmap_arrange(gi_star_2018, gi_star_pvalue_2018, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2018.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-93-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2018.png\", width = 1600, height = 1200)\n\nHCSA_sig_2018 <- HCSA_2018  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2018) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2018) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2018\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2018.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-95-1.png){width=800}\n:::\n:::\n\n\n## 2019\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2019 <- wm_q_2019 %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wts, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n### Gi\\* VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2019.png\", width = 1600, height = 1200)\n\ngi_star_2019 <- tm_shape(HCSA_2019) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2019\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ngi_star_pvalue_2019 <- tm_shape(HCSA_2019) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2019\", \n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(gi_star_2019, gi_star_pvalue_2019, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2019.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-98-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2019.png\", width = 1600, height = 1200)\n\nHCSA_sig_2019 <- HCSA_2019  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2019) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2019) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2019\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2019.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-100-1.png){width=800}\n:::\n:::\n\n\n## 2020\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2020 <- wm_q_2020 %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wts, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n### Gi\\* VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2020.png\", width = 1600, height = 1200)\n\ngi_star_2020 <- tm_shape(HCSA_2020) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2020\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ngi_star_pvalue_2020 <- tm_shape(HCSA_2020) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2020\", \n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(gi_star_2020, gi_star_pvalue_2020, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2020.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-103-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2020.png\", width = 1600, height = 1200)\n\nHCSA_sig_2020 <- HCSA_2020  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2020) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2020) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2020\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2020.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-105-1.png){width=800}\n:::\n:::\n\n\n## 2021\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2021 <- wm_q_2021 %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wts, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n### Gi\\* VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2021.png\", width = 1600, height = 1200)\n\ngi_star_2021 <- tm_shape(HCSA_2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2021\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ngi_star_pvalue_2021 <- tm_shape(HCSA_2021) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2021\", \n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(gi_star_2021, gi_star_pvalue_2021, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2021.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-108-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2021.png\", width = 1600, height = 1200)\n\nHCSA_sig_2021 <- HCSA_2021  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2021) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2021) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2021\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2021.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-110-1.png){width=800}\n:::\n:::\n\n\n## 2022\n\n### Computing local Gi\\* statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHCSA_2022 <- wm_q_2022 %>% \n  mutate(local_Gi = local_gstar_perm(\n    total_cases, nb, wts, nsim = 99),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n### Gi\\* VS P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/gistar_vs_pvalue_map_2022.png\", width = 1600, height = 1200)\n\ngi_star_2022 <- tm_shape(HCSA_2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Total Cases in 2022\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ngi_star_pvalue_2022 <- tm_shape(HCSA_2022) +\n  tm_fill(\"p_value\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi* in 2022\", \n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\ntmap_arrange(gi_star_2022, gi_star_pvalue_2022, ncol = 2)\n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/gistar_vs_pvalue_map_2022.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-113-1.png){width=800}\n:::\n:::\n\n\n### Putting together\n\n\n::: {.cell}\n\n```{.r .cell-code}\npng(\"data/rds/hcsa_map_2022.png\", width = 1600, height = 1200)\n\nHCSA_sig_2022 <- HCSA_2022  %>%\n  filter(p_sim < 0.05)\ntmap_mode(\"plot\")\n\ntm_shape(HCSA_2022) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2022) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"HCSA in 2022\",\n            main.title.size = 2.5,   \n            legend.text.size = 2.0, \n            legend.title.size = 2.7) \n\n# Close the graphic device\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_map_2022.png\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-115-1.png){width=800}\n:::\n:::\n\n:::\n\n::: callout-note\n### Summary of Gi\\* and P-Value Analysis\n\n1.  *Gi Statistic (Hot Spot & Cold Spot Analysis)*\\*\n\n    -   The *Gi statistic*\\* is calculated to identify **clusters of high or low values** of total cases in a given area.\n\n    -   It measures whether the number of cases in a location is significantly higher (**hot spot**) or lower (**cold spot**) than would be expected by random distribution.\n\n2.  *P-Value of Gi Statistic*\\*\n\n    -   The **p-value** determines the **statistical significance** of the observed clusters (hot or cold spots).\n\n    -   A low p-value (\\< 0.05) suggests that the cluster is **unlikely to have occurred by chance**, while a higher p-value indicates randomness in the observed pattern.\n\n3.  **Purpose of Both Analyses**\n\n    -   *Gi* of Total Cases\\* map visually displays the clustering of total cases.\n\n    -   **P-Value of Gi**\\* map helps verify whether the identified clusters are **statistically significant** or if they might be due to random variation.\n\nThese two analyses together provide a clear picture of where significant hot or cold spots are and how reliable these findings are. This ensures any conclusions drawn about spatial patterns are both **visualized** and **statistically validated**.\n:::\n\n## Visualising HCSA map across time span (2017-2022)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get a list of image files in the specified directory for HCSA maps\nhcsa_map_files <- list.files(\"data/rds/\", pattern = \"hcsa_map_\\\\d{4}\\\\.png$\", full.names = TRUE)\n\n# Load saved images and combine them into an animated GIF\nhcsa_images <- lapply(hcsa_map_files, image_read)\n\n# Create an animation from the HCSA map images\nhcsa_animation <- image_animate(image_join(hcsa_images), fps = 1)\n\n# Save the animation as a GIF file\nimage_write(hcsa_animation, path = \"data/rds/hcsa_animation.gif\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimage_read(\"data/rds/hcsa_animation.gif\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-117-1.gif)\n:::\n:::\n\n\n## Summary of HCSA value\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to summarize HCSA values for a given year\nsummarize_hcsa <- function(data) {\n  data %>%\n    summarise(\n      mean_gi_star = mean(gi_star, na.rm = TRUE),\n      min_gi_star = min(gi_star, na.rm = TRUE),\n      max_gi_star = max(gi_star, na.rm = TRUE),\n      sd_gi_star = sd(gi_star, na.rm = TRUE),\n      mean_p_value = mean(p_value, na.rm = TRUE),\n      min_p_value = min(p_value, na.rm = TRUE),\n      max_p_value = max(p_value, na.rm = TRUE),\n      count_hot_spots = sum(gi_star > 0 & p_value < 0.05),\n      count_cold_spots = sum(gi_star < 0 & p_value < 0.05),\n      count_non_significant = sum(p_value >= 0.05),\n      geometry = st_union(geometry)  # Combine geometries\n    )\n}\n\n# Summarizing HCSA for each year\nhcsa_summary_2017 <- summarize_hcsa(HCSA_2017)\nhcsa_summary_2018 <- summarize_hcsa(HCSA_2018)\nhcsa_summary_2019 <- summarize_hcsa(HCSA_2019)\nhcsa_summary_2020 <- summarize_hcsa(HCSA_2020)\nhcsa_summary_2021 <- summarize_hcsa(HCSA_2021)\nhcsa_summary_2022 <- summarize_hcsa(HCSA_2022)\n\n\nhcsa_summary_all <- bind_rows(\n  mutate(hcsa_summary_2017, year = 2017),\n  mutate(hcsa_summary_2018, year = 2018),\n  mutate(hcsa_summary_2019, year = 2019),\n  mutate(hcsa_summary_2020, year = 2020),\n  mutate(hcsa_summary_2021, year = 2021),\n  mutate(hcsa_summary_2022, year = 2022)\n)\n\nwrite_rds(hcsa_summary_all, \"data/rds/hcsa_summary_all.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhcsa_summary_all <- read_rds(\"data/rds/hcsa_summary_all.rds\")\n\n# Show all rows and columns\nprint(hcsa_summary_all, n = Inf, width = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 11 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34804 ymin: 5.610305 xmax: 105.6426 ymax: 20.46352\nGeodetic CRS:  Indian 1975\n# A tibble: 6 × 12\n  mean_gi_star min_gi_star max_gi_star sd_gi_star mean_p_value min_p_value\n*        <dbl>       <dbl>       <dbl>      <dbl>        <dbl>       <dbl>\n1       0.0838       -1.71        4.67       1.29        0.500    7.95e-13\n2       0.0948       -1.47        4.61       1.23        0.529    6.28e-11\n3       0.0924       -1.62        4.44       1.23        0.473    3.69e- 7\n4       0.103        -1.90        3.63       1.20        0.475    1.02e- 6\n5       0.126        -2.41        3.06       1.30        0.393    7.44e- 3\n6       0.199        -2.61        3.41       1.36        0.422    1.76e- 4\n  max_p_value count_hot_spots count_cold_spots count_non_significant\n*       <dbl>           <int>            <int>                 <int>\n1       0.996              NA                0                    NA\n2       1.00               NA                0                    NA\n3       0.966              NA                0                    NA\n4       0.970              NA                0                    NA\n5       0.974              NA                3                    NA\n6       0.985               7               NA                    NA\n                                                                        geometry\n*                                                             <MULTIPOLYGON [°]>\n1 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n2 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n3 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n4 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n5 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n6 (((99.56788 11.08298, 99.56778 11.08326, 99.56765 11.08338, 99.56753 11.08346…\n   year\n* <dbl>\n1  2017\n2  2018\n3  2019\n4  2020\n5  2021\n6  2022\n```\n\n\n:::\n:::\n\n\n::: callout-note\n### Summary of Findings:\n\n1.  *Mean Gi Values*\\*:\n\n    -   Increased from **0.0838 (2017)** to **0.199 (2022)**, indicating more hot spots over time.\n\n2.  *Gi Range*\\*:\n\n    -   Minimum values between **-2.61 to -1.47** (cold spots) and maximum values from **3.06 to 4.67** (significant hot spots).\n\n3.  **Standard Deviation**:\n\n    -   Stable variability in Gi\\* scores, ranging from **1.20 to 1.36**.\n\n4.  **P-Values**:\n\n    -   Average p-values between **0.393 to 0.529**, suggesting many Gi\\* values are not statistically significant.\n\n    -   Minimum p-values as low as **7.95e-13** indicate some significant hot spots.\n\n5.  **Count of Hot Spots and Cold Spots**:\n\n    -   Up to **7 hot spots in 2022**; several years reported **NA** for cold spots, indicating few or no significant cold spots.\n\n6.  **Overall Trends**:\n\n    -   An overall trend of increasing hot spot concentration from 2017 to 2022, suggesting growing areas affected by the phenomena studied (e.g., drug abuse, crime).\n\n### Conclusion\n\nThe HCSA findings highlight a significant rise in hot spot areas over the years, which may require targeted interventions and further investigation into the factors influencing these changes.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa_animation <- image_read(\"data/rds/lisa_animation.gif\")\nhcsa_animation <- image_read(\"data/rds/hcsa_animation.gif\")\n\n# Ensure both animations have the same number of frames by replicating frames if needed\nlisa_frames <- length(lisa_animation)\nhcsa_frames <- length(hcsa_animation)\n\nif (lisa_frames != hcsa_frames) {\n  if (lisa_frames > hcsa_frames) {\n    hcsa_animation <- image_cycle(hcsa_animation, lisa_frames)\n  } else {\n    lisa_animation <- image_cycle(lisa_animation, hcsa_frames)\n  }\n}\n\n# Convert each animation into a list of individual frames\nlisa_frames_list <- as.list(lisa_animation)\nhcsa_frames_list <- as.list(hcsa_animation)\n\n# Resize each frame to ensure no margins and same height\nlisa_frames_resized <- lapply(lisa_frames_list, function(frame) {\n  image_scale(frame, \"800x\")  \n})\n\nhcsa_frames_resized <- lapply(hcsa_frames_list, function(frame) {\n  image_scale(frame, \"800x\")  \n})\n\n# Combine corresponding frames side by side with no gaps\nside_by_side_frames <- mapply(function(lisa_frame, hcsa_frame) {\n  # Use `image_append` with `stack = FALSE` for horizontal stacking\n  image_append(c(lisa_frame, hcsa_frame), stack = FALSE)\n}, lisa_frames_resized, hcsa_frames_resized, SIMPLIFY = FALSE)\n\n# Create a new animation from the combined frames\nside_by_side_animation <- image_animate(image_join(side_by_side_frames), fps = 1)\n\n# Save the final combined animation\nimage_write(side_by_side_animation, path = \"data/rds/lisa_hcsa_side_by_side_animation.gif\")\n\nside_by_side_animation\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-120-1.gif)\n:::\n:::\n\n\n<br/><br/>\n\n# **6.0 Mann-Kendall Test for Trend**\n\nThis will assess the trend of drug abuse in each province over multiple years. \\[See if the abuse case is increasing, decreasing, or stable over time\\]\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Apply Mann-Kendall Test for each province\ntrend_results <- summary_stats %>%\n  group_by(province_name) %>%\n  summarise(\n    total_cases = list(total_cases),         \n    trend = MannKendall(unlist(total_cases))$tau,  # Tau value indicates trend direction\n    p_value = MannKendall(unlist(total_cases))$sl,   # p-value for significance\n  )\n\n# Classify trends based on the Mann-Kendall results\ntrend_results <- trend_results %>%\n  mutate(trend_status = case_when(\n    p_value < 0.05 & trend > 0 ~ \"Increasing\",\n    p_value < 0.05 & trend < 0 ~ \"Decreasing\",\n    p_value >= 0.05 ~ \"Stable\",\n    TRUE ~ \"No sufficient data\"\n  ))\n\nwrite_rds(trend_results, \"data/rds/trend_results.rds\")\n```\n:::\n\n\n## Provincial Trends\n\n::: panel-tabset\n## Increasing Trends\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincreasing_trends <- trend_results %>%\n  filter(trend_status == \"Increasing\") %>%\n  pull(province_name)\n\nwrite_rds(increasing_trends, \"data/rds/increasing_trends.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nincreasing_trends <- read_rds(\"data/rds/increasing_trends.rds\")\n\n# Check if increasing_trends is null or empty and set a default message\nif (is.null(increasing_trends) || length(increasing_trends) == 0) {\n  result <- \"NIL\"\n} else {\n  result <- paste(increasing_trends, collapse = \", \")\n}\n\ncat(result, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nBueng Kan, Lampang, Mae Hong Son, Maha Sarakham, Roi Et, Sakon Nakhon, Udon Thani \n```\n\n\n:::\n:::\n\n\n## Decreasing Trends\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndecreasing_trends <- trend_results %>%\n  filter(trend_status == \"Decreasing\") %>%\n  pull(province_name)\n\nwrite_rds(decreasing_trends, \"data/rds/decreasing_trends.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndecreasing_trends <- read_rds(\"data/rds/decreasing_trends.rds\")\n\n# Check if decreasing_trends is null or empty and set a default message\nif (is.null(decreasing_trends) || length(decreasing_trends) == 0) {\n  result <- \"NIL\"\n} else {\n  result <- paste(decreasing_trends, collapse = \", \")\n}\n\ncat(result, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNIL \n```\n\n\n:::\n:::\n\n\n## Stable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstable_trends <- trend_results %>%\n  filter(trend_status == \"Stable\") %>%\n  pull(province_name)\n\nwrite_rds(stable_trends, \"data/rds/stable_trends.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstable_trends <- read_rds(\"data/rds/stable_trends.rds\")\n\n# Check if stable_trends is null or empty and set a default message\nif (is.null(stable_trends) || length(stable_trends) == 0) {\n  result <- \"NIL\"\n} else {\n  result <- paste(stable_trends, collapse = \", \")\n}\n\ncat(result, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAmnat Charoen, Ang Thong, Bangkok, Buri Ram, Chachoengsao, Chai Nat, Chaiyaphum, Chanthaburi, Chiang Mai, Chiang Rai, Chon Buri, Chumphon, Kalasin, Kamphaeng Phet, Kanchanaburi, Khon Kaen, Krabi, Lamphun, Loei, Lop Buri, Mukdahan, Nakhon Nayok, Nakhon Pathom, Nakhon Phanom, Nakhon Ratchasima, Nakhon Sawan, Nakhon Si Thammarat, Nan, Narathiwat, Nong Bua Lam Phu, Nong Khai, Nonthaburi, Pathum Thani, Pattani, Phangnga, Phatthalung, Phayao, Phetchabun, Phetchaburi, Phichit, Phitsanulok, Phra Nakhon Si Ayutthaya, Phrae, Phuket, Prachin Buri, Prachuap Khiri Khan, Ranong, Ratchaburi, Rayong, Sa Kaeo, Samut Prakan, Samut Sakhon, Samut Songkhram, Saraburi, Satun, Si Sa Ket, Sing Buri, Songkhla, Sukhothai, Suphan Buri, Surat Thani, Surin, Tak, Trang, Trat, Ubon Ratchathani, Uthai Thani, Uttaradit, Yala, Yasothon \n```\n\n\n:::\n:::\n\n:::\n\n<br/><br/>\n\n# **7.0 Predicting near future trends**\n\nBy forecasting, we can enhance our strategic planning, enabling proactive policy development, targeted interventions, and more effective resource allocation. This foresight allows decision-makers to anticipate challenges and respond promptly, ultimately reducing the impact of drug abuse on communities.\n\n## Forecast Future Values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(forecast)\n\n\narima_forecasts <- list()\n\nfor (province in unique(drug_offenses_by_province$province_name)) {\n  province_data <- drug_offenses_by_province %>%\n    filter(province_name == province) %>%\n    arrange(year)\n  \n  # Create time series object for case count\n  ts_data <- ts(province_data$case_count, start = min(province_data$year), frequency = 1)\n  \n  # Fit ARIMA model\n  fit <- auto.arima(ts_data)\n  \n  # Forecast for the next 5 years (2023 to 2027)\n  forecasted_values <- forecast(fit, h = 5)\n  \n  # Store forecast results for each year\n  arima_forecasts[[province]] <- data.frame(\n    province_name = province,\n    year = 2023:2027,\n    predicted_cases = as.numeric(forecasted_values$mean)\n  )\n}\n\n# Combine forecast results for all provinces\nfuture_predictions <- bind_rows(arima_forecasts)\n```\n:::\n\n\n## Hot/Cold Spot Classification\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set thresholds for hot and cold spots\nhot_spot_threshold <- quantile(drug_offenses_by_province$case_count, 0.75)\ncold_spot_threshold <- quantile(drug_offenses_by_province$case_count, 0.25)\n\n# Classify hot/cold spots based on predicted cases for each year\nfuture_predictions <- future_predictions %>%\n  mutate(hot_cold_label = case_when(\n    predicted_cases > hot_spot_threshold ~ \"Hot Spot\",\n    predicted_cases < cold_spot_threshold ~ \"Cold Spot\",\n    TRUE ~ \"Neutral\"\n  ))\n\nprint(future_predictions)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               province_name year predicted_cases hot_cold_label\n1                    Bangkok 2023         0.00000      Cold Spot\n2                    Bangkok 2024         0.00000      Cold Spot\n3                    Bangkok 2025         0.00000      Cold Spot\n4                    Bangkok 2026         0.00000      Cold Spot\n5                    Bangkok 2027         0.00000      Cold Spot\n6                   Chai Nat 2023       121.95164        Neutral\n7                   Chai Nat 2024       158.61225        Neutral\n8                   Chai Nat 2025       158.61225        Neutral\n9                   Chai Nat 2026       158.61225        Neutral\n10                  Chai Nat 2027       158.61225        Neutral\n11                Nonthaburi 2023       445.56122        Neutral\n12                Nonthaburi 2024       770.69906       Hot Spot\n13                Nonthaburi 2025       971.02793       Hot Spot\n14                Nonthaburi 2026      1085.64477       Hot Spot\n15                Nonthaburi 2027      1044.22187       Hot Spot\n16              Pathum Thani 2023       444.93144        Neutral\n17              Pathum Thani 2024       745.38727       Hot Spot\n18              Pathum Thani 2025       974.66979       Hot Spot\n19              Pathum Thani 2026      1108.45103       Hot Spot\n20              Pathum Thani 2027      1140.99565       Hot Spot\n21  Phra Nakhon Si Ayutthaya 2023       433.96887        Neutral\n22  Phra Nakhon Si Ayutthaya 2024       734.24699       Hot Spot\n23  Phra Nakhon Si Ayutthaya 2025       934.85736       Hot Spot\n24  Phra Nakhon Si Ayutthaya 2026      1025.35557       Hot Spot\n25  Phra Nakhon Si Ayutthaya 2027      1019.24844       Hot Spot\n26                  Lop Buri 2023        73.42092        Neutral\n27                  Lop Buri 2024       -13.05389      Cold Spot\n28                  Lop Buri 2025        61.22385        Neutral\n29                  Lop Buri 2026       -14.51496      Cold Spot\n30                  Lop Buri 2027        30.78899        Neutral\n31              Samut Prakan 2023       375.17550        Neutral\n32              Samut Prakan 2024       541.24572        Neutral\n33              Samut Prakan 2025       790.09928       Hot Spot\n34              Samut Prakan 2026       905.81670       Hot Spot\n35              Samut Prakan 2027       905.81670       Hot Spot\n36                  Saraburi 2023       156.28755        Neutral\n37                  Saraburi 2024       276.62499        Neutral\n38                  Saraburi 2025       410.66607        Neutral\n39                  Saraburi 2026       345.65633        Neutral\n40                  Saraburi 2027       323.05549        Neutral\n41                 Sing Buri 2023        77.82750        Neutral\n42                 Sing Buri 2024        91.55917        Neutral\n43                 Sing Buri 2025       117.63052        Neutral\n44                 Sing Buri 2026       120.66955        Neutral\n45                 Sing Buri 2027       129.50619        Neutral\n46                 Ang Thong 2023        94.64097        Neutral\n47                 Ang Thong 2024       102.49061        Neutral\n48                 Ang Thong 2025       141.69769        Neutral\n49                 Ang Thong 2026       141.45184        Neutral\n50                 Ang Thong 2027       158.01154        Neutral\n51               Chanthaburi 2023       272.65223        Neutral\n52               Chanthaburi 2024       326.70195        Neutral\n53               Chanthaburi 2025       326.70195        Neutral\n54               Chanthaburi 2026       326.70195        Neutral\n55               Chanthaburi 2027       326.70195        Neutral\n56              Chachoengsao 2023       405.88506        Neutral\n57              Chachoengsao 2024       556.61584        Neutral\n58              Chachoengsao 2025       556.61584        Neutral\n59              Chachoengsao 2026       556.61584        Neutral\n60              Chachoengsao 2027       556.61584        Neutral\n61                 Chon Buri 2023       941.06750       Hot Spot\n62                 Chon Buri 2024      1259.21802       Hot Spot\n63                 Chon Buri 2025      1259.21802       Hot Spot\n64                 Chon Buri 2026      1259.21802       Hot Spot\n65                 Chon Buri 2027      1259.21802       Hot Spot\n66                      Trat 2023       110.88123        Neutral\n67                      Trat 2024       139.82447        Neutral\n68                      Trat 2025       139.82447        Neutral\n69                      Trat 2026       139.82447        Neutral\n70                      Trat 2027       139.82447        Neutral\n71              Nakhon Nayok 2023       226.80350        Neutral\n72              Nakhon Nayok 2024       293.07455        Neutral\n73              Nakhon Nayok 2025       293.07455        Neutral\n74              Nakhon Nayok 2026       293.07455        Neutral\n75              Nakhon Nayok 2027       293.07455        Neutral\n76              Prachin Buri 2023       274.71493        Neutral\n77              Prachin Buri 2024       374.77267        Neutral\n78              Prachin Buri 2025       374.77267        Neutral\n79              Prachin Buri 2026       374.77267        Neutral\n80              Prachin Buri 2027       374.77267        Neutral\n81                    Rayong 2023       656.57920       Hot Spot\n82                    Rayong 2024       846.06450       Hot Spot\n83                    Rayong 2025       846.06450       Hot Spot\n84                    Rayong 2026       846.06450       Hot Spot\n85                    Rayong 2027       846.06450       Hot Spot\n86                   Sa Kaeo 2023       227.53179        Neutral\n87                   Sa Kaeo 2024       329.99615        Neutral\n88                   Sa Kaeo 2025       329.99615        Neutral\n89                   Sa Kaeo 2026       329.99615        Neutral\n90                   Sa Kaeo 2027       329.99615        Neutral\n91                Chaiyaphum 2023       574.76971        Neutral\n92                Chaiyaphum 2024       669.53688       Hot Spot\n93                Chaiyaphum 2025       669.53688       Hot Spot\n94                Chaiyaphum 2026       669.53688       Hot Spot\n95                Chaiyaphum 2027       669.53688       Hot Spot\n96         Nakhon Ratchasima 2023       792.99239       Hot Spot\n97         Nakhon Ratchasima 2024      1013.51653       Hot Spot\n98         Nakhon Ratchasima 2025      1013.51653       Hot Spot\n99         Nakhon Ratchasima 2026      1013.51653       Hot Spot\n100        Nakhon Ratchasima 2027      1013.51653       Hot Spot\n101                 Buri Ram 2023       455.31164        Neutral\n102                 Buri Ram 2024       595.14582        Neutral\n103                 Buri Ram 2025       595.14582        Neutral\n104                 Buri Ram 2026       595.14582        Neutral\n105                 Buri Ram 2027       595.14582        Neutral\n106                 Yasothon 2023       404.57270        Neutral\n107                 Yasothon 2024       442.14877        Neutral\n108                 Yasothon 2025       442.14877        Neutral\n109                 Yasothon 2026       442.14877        Neutral\n110                 Yasothon 2027       442.14877        Neutral\n111                Si Sa Ket 2023       648.68659       Hot Spot\n112                Si Sa Ket 2024       804.53952       Hot Spot\n113                Si Sa Ket 2025       804.53952       Hot Spot\n114                Si Sa Ket 2026       804.53952       Hot Spot\n115                Si Sa Ket 2027       804.53952       Hot Spot\n116                    Surin 2023       340.39047        Neutral\n117                    Surin 2024       465.10676        Neutral\n118                    Surin 2025       465.10676        Neutral\n119                    Surin 2026       465.10676        Neutral\n120                    Surin 2027       465.10676        Neutral\n121            Amnat Charoen 2023       309.37088        Neutral\n122            Amnat Charoen 2024       368.68462        Neutral\n123            Amnat Charoen 2025       368.68462        Neutral\n124            Amnat Charoen 2026       368.68462        Neutral\n125            Amnat Charoen 2027       368.68462        Neutral\n126         Ubon Ratchathani 2023       963.58992       Hot Spot\n127         Ubon Ratchathani 2024      1184.15202       Hot Spot\n128         Ubon Ratchathani 2025      1184.15202       Hot Spot\n129         Ubon Ratchathani 2026      1184.15202       Hot Spot\n130         Ubon Ratchathani 2027      1184.15202       Hot Spot\n131                  Kalasin 2023       523.82305        Neutral\n132                  Kalasin 2024       617.81681        Neutral\n133                  Kalasin 2025       833.20013       Hot Spot\n134                  Kalasin 2026       820.92124       Hot Spot\n135                  Kalasin 2027       859.35567       Hot Spot\n136                Khon Kaen 2023       705.88583       Hot Spot\n137                Khon Kaen 2024       694.86365       Hot Spot\n138                Khon Kaen 2025       910.47965       Hot Spot\n139                Khon Kaen 2026       896.19125       Hot Spot\n140                Khon Kaen 2027       962.60579       Hot Spot\n141            Nakhon Phanom 2023       272.33236        Neutral\n142            Nakhon Phanom 2024       346.37847        Neutral\n143            Nakhon Phanom 2025       346.37847        Neutral\n144            Nakhon Phanom 2026       346.37847        Neutral\n145            Nakhon Phanom 2027       346.37847        Neutral\n146                Bueng Kan 2023       340.66167        Neutral\n147                Bueng Kan 2024       463.89491        Neutral\n148                Bueng Kan 2025       581.50795        Neutral\n149                Bueng Kan 2026       587.37437        Neutral\n150                Bueng Kan 2027       588.34525        Neutral\n151            Maha Sarakham 2023       322.76105        Neutral\n152            Maha Sarakham 2024       541.66137        Neutral\n153            Maha Sarakham 2025       702.74837       Hot Spot\n154            Maha Sarakham 2026       792.21502       Hot Spot\n155            Maha Sarakham 2027       809.35105       Hot Spot\n156                 Mukdahan 2023       347.46424        Neutral\n157                 Mukdahan 2024       381.15692        Neutral\n158                 Mukdahan 2025       381.15692        Neutral\n159                 Mukdahan 2026       381.15692        Neutral\n160                 Mukdahan 2027       381.15692        Neutral\n161                   Roi Et 2023       460.04874        Neutral\n162                   Roi Et 2024       406.74608        Neutral\n163                   Roi Et 2025       534.37317        Neutral\n164                   Roi Et 2026       513.27423        Neutral\n165                   Roi Et 2027       549.00865        Neutral\n166                     Loei 2023       372.22320        Neutral\n167                     Loei 2024       478.74224        Neutral\n168                     Loei 2025       653.88396       Hot Spot\n169                     Loei 2026       705.60846       Hot Spot\n170                     Loei 2027       720.21339       Hot Spot\n171             Sakon Nakhon 2023       270.81527        Neutral\n172             Sakon Nakhon 2024       261.27038        Neutral\n173             Sakon Nakhon 2025       371.75413        Neutral\n174             Sakon Nakhon 2026       360.67424        Neutral\n175             Sakon Nakhon 2027       406.21679        Neutral\n176                Nong Khai 2023       365.44722        Neutral\n177                Nong Khai 2024       444.63562        Neutral\n178                Nong Khai 2025       444.63562        Neutral\n179                Nong Khai 2026       444.63562        Neutral\n180                Nong Khai 2027       444.63562        Neutral\n181         Nong Bua Lam Phu 2023        97.96556        Neutral\n182         Nong Bua Lam Phu 2024        97.38559        Neutral\n183         Nong Bua Lam Phu 2025       135.67981        Neutral\n184         Nong Bua Lam Phu 2026       133.09628        Neutral\n185         Nong Bua Lam Phu 2027       148.21035        Neutral\n186               Udon Thani 2023       560.87453        Neutral\n187               Udon Thani 2024       502.57923        Neutral\n188               Udon Thani 2025       667.68487       Hot Spot\n189               Udon Thani 2026       643.74121       Hot Spot\n190               Udon Thani 2027       692.63295       Hot Spot\n191               Chiang Rai 2023       552.88373        Neutral\n192               Chiang Rai 2024       781.08315       Hot Spot\n193               Chiang Rai 2025       781.08315       Hot Spot\n194               Chiang Rai 2026       781.08315       Hot Spot\n195               Chiang Rai 2027       781.08315       Hot Spot\n196               Chiang Mai 2023       896.20515       Hot Spot\n197               Chiang Mai 2024      1263.40637       Hot Spot\n198               Chiang Mai 2025      1263.40637       Hot Spot\n199               Chiang Mai 2026      1263.40637       Hot Spot\n200               Chiang Mai 2027      1263.40637       Hot Spot\n201                      Nan 2023       296.41229        Neutral\n202                      Nan 2024       349.12970        Neutral\n203                      Nan 2025       349.12970        Neutral\n204                      Nan 2026       349.12970        Neutral\n205                      Nan 2027       349.12970        Neutral\n206                   Phayao 2023       285.56858        Neutral\n207                   Phayao 2024       339.30987        Neutral\n208                   Phayao 2025       339.30987        Neutral\n209                   Phayao 2026       339.30987        Neutral\n210                   Phayao 2027       339.30987        Neutral\n211                    Phrae 2023       380.78755        Neutral\n212                    Phrae 2024       390.83041        Neutral\n213                    Phrae 2025       390.83041        Neutral\n214                    Phrae 2026       390.83041        Neutral\n215                    Phrae 2027       390.83041        Neutral\n216             Mae Hong Son 2023        49.99958        Neutral\n217             Mae Hong Son 2024        57.75518        Neutral\n218             Mae Hong Son 2025        74.56834        Neutral\n219             Mae Hong Son 2026        75.80713        Neutral\n220             Mae Hong Son 2027        81.58090        Neutral\n221                  Lampang 2023       453.32522        Neutral\n222                  Lampang 2024       521.25600        Neutral\n223                  Lampang 2025       521.25600        Neutral\n224                  Lampang 2026       521.25600        Neutral\n225                  Lampang 2027       521.25600        Neutral\n226                  Lamphun 2023       339.14296        Neutral\n227                  Lamphun 2024       379.74319        Neutral\n228                  Lamphun 2025       379.74319        Neutral\n229                  Lamphun 2026       379.74319        Neutral\n230                  Lamphun 2027       379.74319        Neutral\n231           Kamphaeng Phet 2023       196.47710        Neutral\n232           Kamphaeng Phet 2024       303.37231        Neutral\n233           Kamphaeng Phet 2025       303.37231        Neutral\n234           Kamphaeng Phet 2026       303.37231        Neutral\n235           Kamphaeng Phet 2027       303.37231        Neutral\n236                      Tak 2023       161.86546        Neutral\n237                      Tak 2024       244.01662        Neutral\n238                      Tak 2025       244.01662        Neutral\n239                      Tak 2026       244.01662        Neutral\n240                      Tak 2027       244.01662        Neutral\n241             Nakhon Sawan 2023       136.50688        Neutral\n242             Nakhon Sawan 2024       175.40399        Neutral\n243             Nakhon Sawan 2025       238.58111        Neutral\n244             Nakhon Sawan 2026       251.45816        Neutral\n245             Nakhon Sawan 2027       281.20155        Neutral\n246                  Phichit 2023       131.05482        Neutral\n247                  Phichit 2024       212.23742        Neutral\n248                  Phichit 2025       212.23742        Neutral\n249                  Phichit 2026       212.23742        Neutral\n250                  Phichit 2027       212.23742        Neutral\n251              Phitsanulok 2023       155.65360        Neutral\n252              Phitsanulok 2024       271.22834        Neutral\n253              Phitsanulok 2025       303.93993        Neutral\n254              Phitsanulok 2026       313.19843        Neutral\n255              Phitsanulok 2027       315.81889        Neutral\n256               Phetchabun 2023       221.68122        Neutral\n257               Phetchabun 2024       291.15973        Neutral\n258               Phetchabun 2025       357.68944        Neutral\n259               Phetchabun 2026       374.81113        Neutral\n260               Phetchabun 2027       395.08849        Neutral\n261                Sukhothai 2023       241.34378        Neutral\n262                Sukhothai 2024       300.84863        Neutral\n263                Sukhothai 2025       344.53911        Neutral\n264                Sukhothai 2026       366.19521        Neutral\n265                Sukhothai 2027       363.11644        Neutral\n266                Uttaradit 2023       118.22115        Neutral\n267                Uttaradit 2024       209.21378        Neutral\n268                Uttaradit 2025       248.11678        Neutral\n269                Uttaradit 2026       264.74938        Neutral\n270                Uttaradit 2027       271.86048        Neutral\n271              Uthai Thani 2023        97.45097        Neutral\n272              Uthai Thani 2024       128.06367        Neutral\n273              Uthai Thani 2025       128.06367        Neutral\n274              Uthai Thani 2026       128.06367        Neutral\n275              Uthai Thani 2027       128.06367        Neutral\n276             Kanchanaburi 2023       403.66211        Neutral\n277             Kanchanaburi 2024       594.20084        Neutral\n278             Kanchanaburi 2025       779.61462       Hot Spot\n279             Kanchanaburi 2026       871.02073       Hot Spot\n280             Kanchanaburi 2027       880.35025       Hot Spot\n281            Nakhon Pathom 2023       326.31478        Neutral\n282            Nakhon Pathom 2024       477.63712        Neutral\n283            Nakhon Pathom 2025       477.63712        Neutral\n284            Nakhon Pathom 2026       477.63712        Neutral\n285            Nakhon Pathom 2027       477.63712        Neutral\n286      Prachuap Khiri Khan 2023       267.83800        Neutral\n287      Prachuap Khiri Khan 2024       474.80600        Neutral\n288      Prachuap Khiri Khan 2025       607.37035        Neutral\n289      Prachuap Khiri Khan 2026       665.46209       Hot Spot\n290      Prachuap Khiri Khan 2027       659.21701       Hot Spot\n291              Phetchaburi 2023       342.47703        Neutral\n292              Phetchaburi 2024       568.68425        Neutral\n293              Phetchaburi 2025       656.94812       Hot Spot\n294              Phetchaburi 2026       665.69717       Hot Spot\n295              Phetchaburi 2027       607.90321        Neutral\n296               Ratchaburi 2023       460.03729        Neutral\n297               Ratchaburi 2024       584.56236        Neutral\n298               Ratchaburi 2025       584.56236        Neutral\n299               Ratchaburi 2026       584.56236        Neutral\n300               Ratchaburi 2027       584.56236        Neutral\n301          Samut Songkhram 2023        76.30650        Neutral\n302          Samut Songkhram 2024       120.26764        Neutral\n303          Samut Songkhram 2025       147.13499        Neutral\n304          Samut Songkhram 2026       153.43014        Neutral\n305          Samut Songkhram 2027       150.57259        Neutral\n306             Samut Sakhon 2023        81.87036        Neutral\n307             Samut Sakhon 2024       158.44357        Neutral\n308             Samut Sakhon 2025       273.54406        Neutral\n309             Samut Sakhon 2026       316.86129        Neutral\n310             Samut Sakhon 2027       330.63369        Neutral\n311              Suphan Buri 2023       435.53079        Neutral\n312              Suphan Buri 2024       645.01305       Hot Spot\n313              Suphan Buri 2025       837.17651       Hot Spot\n314              Suphan Buri 2026       939.71474       Hot Spot\n315              Suphan Buri 2027       927.00394       Hot Spot\n316                    Krabi 2023       239.48163        Neutral\n317                    Krabi 2024       338.06991        Neutral\n318                    Krabi 2025       416.06659        Neutral\n319                    Krabi 2026       444.48590        Neutral\n320                    Krabi 2027       470.25255        Neutral\n321                 Chumphon 2023       266.37220        Neutral\n322                 Chumphon 2024       336.53238        Neutral\n323                 Chumphon 2025       449.78627        Neutral\n324                 Chumphon 2026       470.75982        Neutral\n325                 Chumphon 2027       519.73980        Neutral\n326      Nakhon Si Thammarat 2023       873.57177       Hot Spot\n327      Nakhon Si Thammarat 2024      1107.81056       Hot Spot\n328      Nakhon Si Thammarat 2025      1395.35146       Hot Spot\n329      Nakhon Si Thammarat 2026      1457.70530       Hot Spot\n330      Nakhon Si Thammarat 2027      1553.31867       Hot Spot\n331                 Phangnga 2023       287.99713        Neutral\n332                 Phangnga 2024       493.81763        Neutral\n333                 Phangnga 2025       628.86052       Hot Spot\n334                 Phangnga 2026       695.65030       Hot Spot\n335                 Phangnga 2027       696.69975       Hot Spot\n336                   Phuket 2023       466.46431        Neutral\n337                   Phuket 2024       781.86130       Hot Spot\n338                   Phuket 2025       781.86130       Hot Spot\n339                   Phuket 2026       781.86130       Hot Spot\n340                   Phuket 2027       781.86130       Hot Spot\n341                   Ranong 2023       152.80096        Neutral\n342                   Ranong 2024       175.09006        Neutral\n343                   Ranong 2025       231.90182        Neutral\n344                   Ranong 2026       236.80697        Neutral\n345                   Ranong 2027       258.14327        Neutral\n346              Surat Thani 2023       610.96897        Neutral\n347              Surat Thani 2024       911.56069       Hot Spot\n348              Surat Thani 2025      1110.68598       Hot Spot\n349              Surat Thani 2026      1203.86861       Hot Spot\n350              Surat Thani 2027      1269.21391       Hot Spot\n351                    Trang 2023       262.70161        Neutral\n352                    Trang 2024       311.49759        Neutral\n353                    Trang 2025       270.62038        Neutral\n354                    Trang 2026       378.39517        Neutral\n355                    Trang 2027       496.52719        Neutral\n356               Narathiwat 2023       171.77751        Neutral\n357               Narathiwat 2024       253.48050        Neutral\n358               Narathiwat 2025       418.17847        Neutral\n359               Narathiwat 2026       530.21478        Neutral\n360               Narathiwat 2027       530.21478        Neutral\n361                  Pattani 2023       194.96926        Neutral\n362                  Pattani 2024       298.61454        Neutral\n363                  Pattani 2025       446.29248        Neutral\n364                  Pattani 2026       529.67746        Neutral\n365                  Pattani 2027       529.67746        Neutral\n366              Phatthalung 2023       118.68252        Neutral\n367              Phatthalung 2024       195.62916        Neutral\n368              Phatthalung 2025       245.51676        Neutral\n369              Phatthalung 2026       277.86090        Neutral\n370              Phatthalung 2027       298.83090        Neutral\n371                     Yala 2023       249.57731        Neutral\n372                     Yala 2024       413.50934        Neutral\n373                     Yala 2025       413.50934        Neutral\n374                     Yala 2026       413.50934        Neutral\n375                     Yala 2027       413.50934        Neutral\n376                 Songkhla 2023       487.34873        Neutral\n377                 Songkhla 2024       806.72011       Hot Spot\n378                 Songkhla 2025      1016.01187       Hot Spot\n379                 Songkhla 2026      1153.16581       Hot Spot\n380                 Songkhla 2027      1243.04609       Hot Spot\n381                    Satun 2023       469.36891        Neutral\n382                    Satun 2024       729.24674       Hot Spot\n383                    Satun 2025       873.52819       Hot Spot\n384                    Satun 2026       955.64227       Hot Spot\n385                    Satun 2027       894.15579       Hot Spot\n```\n\n\n:::\n:::\n\n\n## Visualization of Predictions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\n\n# Merge predictions with spatial data\nfuture_spatial <- province_boundaries %>%\n  left_join(future_predictions, by = \"province_name\")\n\n\ntm_shape(future_spatial) +\n  tm_polygons(\"hot_cold_label\", palette = c(\"blue\", \"red\", \"gray\"), \n              title = \"Predicted Hot/Cold Spots (2023-2027)\") +\n  tm_borders() +\n  tm_layout(title = \"Predicted Drug Abuse Hot/Cold Spots in Thailand (2023-2027)\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-130-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nARIMA (AutoRegressive Integrated Moving Average) model is used for our time series forecasting.\n\nAlso it offers,\n\n-   **Flexibility**: in various time series patterns, suitable for non-stationary data.\n\n-   **Automatic Parameter Selection** (`auto.arima`): simplifies model fitting by automatically selecting optimal parameters.\n\n-   **Robustness**: in capturing fluctuations in historical data.\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}